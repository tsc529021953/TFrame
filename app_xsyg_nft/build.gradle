apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "../build_types.gradle"
apply from: "../app_types.gradle"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.sc.nft"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 4
        versionName "0.0.0-4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }

        ndk{
            abiFilters 'armeabi-v7a','arm64-v8a'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }


    signingConfigs {
        def path = ''
//        if (isBuildModule.toBoolean())
        path = '../app_xsyg_nft/';
        debug {
            storeFile file(path + project.property('keyStore'))
            storePassword project.property('keyStorePassword')
            keyAlias project.property('keyAlias')
            keyPassword project.property('keyAliasPassword')
        }
        release {
            storeFile file(path + project.property('keyStore'))
            storePassword project.property('keyStorePassword')
            keyAlias project.property('keyAlias')
            keyPassword project.property('keyAliasPassword')
        }
    }

//    configurations {
//        all*.exclude group: 'com.google.code.gson'
//    }
    //开发用 MMdd  打包提测 MMddHH 因为精确到小时 跨小时就不能自动安装apk
    def timeForDebugFileFormater = "MMddHH"
    def timeForReleaseFileFormater = "MMdd"
    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def buildTypeName = variant.buildType.name

            def timeFormater
            if ("debug".equalsIgnoreCase(buildTypeName)) {
                timeFormater = timeForDebugFileFormater
            } else {
                timeFormater = timeForReleaseFileFormater
            }
            def tmp = "XSYG_NFT_${buildTypeName}_v${variant.versionName}_${releaseTime(timeFormater)}.apk"
            println(tmp)
            outputFileName = tmp
        }
    }
}

static def releaseTime(String formater) {
    return new Date().format(formater, TimeZone.getTimeZone("GMT+08:00"))
}

dependencies {

    implementation deps.kotlin.stdlib
    implementation deps.support.core_ktx

    implementation deps.support.app_compat
    androidTestImplementation deps.support.app_compat
    implementation deps.support.design
    androidTestImplementation deps.support.design
    implementation deps.constraint_layout
    implementation project(path: ':lib_frame')
    testImplementation deps.junit
//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation deps.espresso.core

    implementation deps.arouter.api
    kapt deps.arouter.compiler

    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    kapt deps.dagger.android_support_compiler
    kapt deps.dagger.compiler

//    implementation 'com.github.Almeros:android-gesture-detectors:v1.0.1'
    implementation deps.gif
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.auc
}
